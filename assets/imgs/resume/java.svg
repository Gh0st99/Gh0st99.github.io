<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="2895px" preserveAspectRatio="none" style="width:1523px;height:2895px;" version="1.1" viewBox="0 0 1523 2895" width="1523px" zoomAndPan="magnify"><defs><filter height="300%" id="f14u7xvm8byepy" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="46" x="10" y="1428.4648"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="26" x="20" y="1451.46">Java</text><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="96" x="106" y="905.582"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="76" x="116" y="928.5771">并发 &amp; 同步</text><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="182" x="252" y="20"/><a href="https://tech.meituan.com/2018/11/15/java-lock.html" target="_top" title="https://tech.meituan.com/2018/11/15/java-lock.html" xlink:actuate="onRequest" xlink:href="https://tech.meituan.com/2018/11/15/java-lock.html" xlink:show="new" xlink:title="https://tech.meituan.com/2018/11/15/java-lock.html" xlink:type="simple"><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="61" x="262" y="42.9951">锁事-美团</text></a><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="93" x="327" y="42.9951">synchronized</text><a href="https://xiaomi-info.github.io/2020/03/24/synchronized/" target="_top" title="https://xiaomi-info.github.io/2020/03/24/synchronized/" xlink:actuate="onRequest" xlink:href="https://xiaomi-info.github.io/2020/03/24/synchronized/" xlink:show="new" xlink:title="https://xiaomi-info.github.io/2020/03/24/synchronized/" xlink:type="simple"><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="61" x="487" y="33.8467">原理-小米</text></a><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="548" y="33.8467">，可重入性，可见性</text><path d="M434,38.1484 L444,38.1484 C459,38.1484 459,29 474,29 L484,29 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="42" x="487" y="52.1436">锁升级</text><path d="M434,38.1484 L444,38.1484 C459,38.1484 459,47.2969 474,47.2969 L484,47.2969 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M202,923.7305 L212,923.7305 C227,923.7305 227,38.1484 242,38.1484 L252,38.1484 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="67" x="252" y="84.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="47" x="262" y="107.7373">volatile</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="329" x="372" y="80.292">64 位写入的原子性，按照 slot 写入。64 位要写两次</text><path d="M319,102.8906 L329,102.8906 C344,102.8906 344,75.4453 359,75.4453 L369,75.4453 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="42" x="372" y="98.5889">可见性</text><path d="M319,102.8906 L329,102.8906 C344,102.8906 344,93.7422 359,93.7422 L369,93.7422 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="372" y="116.8857">内存屏障</text><path d="M319,102.8906 L329,102.8906 C344,102.8906 344,112.0391 359,112.0391 L369,112.0391 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="168" x="372" y="135.1826">内存屏障，保证指令不重排</text><path d="M319,102.8906 L329,102.8906 C344,102.8906 344,130.3359 359,130.3359 L369,130.3359 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M202,923.7305 L212,923.7305 C227,923.7305 227,102.8906 242,102.8906 L252,102.8906 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="34" x="252" y="585.3516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="14" x="262" y="608.3467">锁</text><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="62" x="336" y="331.0469"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="42" x="346" y="354.042">锁升级</text><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="62" x="448" y="213.9688"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="42" x="458" y="236.9639">偏向锁</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="563" y="153.4795">一直被一个线程所访问</text><path d="M510,232.1172 L520,232.1172 C535,232.1172 535,148.6328 550,148.6328 L560,148.6328 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="14" x="563" y="171.7764">在</text><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="85" x="581" y="171.7764">Mark Word</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="670" y="171.7764">里存储锁偏向的线程</text><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="15" x="800" y="171.7764">ID</text><path d="M510,232.1172 L520,232.1172 C535,232.1172 535,166.9297 550,166.9297 L560,166.9297 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="0" x="567" y="190.0732"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="28" x="563" y="206.3701">撤销</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="14" x="591" y="206.3701">：</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="238" x="563" y="222.667">只有遇到其他线程尝试竞争偏向锁时，</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="196" x="563" y="238.9639">持有偏向锁的线程才会释放锁，</text><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="70" x="563" y="255.2607">不会主动释</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="633" y="255.2607">放偏向锁。</text><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="98" x="563" y="271.5576">等待全局安全点</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="168" x="661" y="271.5576">，暂停拥有偏向锁的线程，</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="210" x="563" y="287.8545">判断锁对象是否处于被锁定状态。</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="380" x="563" y="304.1514">恢复无锁（标志位为 01）或轻量级锁（标志位为 00）的状态</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="0" x="567" y="320.4482"/><path d="M510,232.1172 L520,232.1172 C535,232.1172 535,250.4141 550,250.4141 L560,250.4141 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M398,349.1953 L408,349.1953 C423,349.1953 423,232.1172 438,232.1172 L448,232.1172 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="76" x="448" y="414.5313"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="458" y="437.5264">轻量级锁</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="392" x="577" y="338.7451">线程会通过自旋的形式尝试获取锁，不会阻塞，从而提高性能。</text><path d="M524,432.6797 L534,432.6797 C549,432.6797 549,333.8984 564,333.8984 L574,333.8984 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="0" x="581" y="357.042"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="61" x="577" y="373.3389">无锁状态:</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="14" x="577" y="389.6357">在</text><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="98" x="591" y="389.6357">当前线程的栈帧</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="689" y="389.6357">中建立一个名为</text><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="42" x="787" y="389.6357">锁记录</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="170" x="829" y="389.6357">（Lock Record）的空间，</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="577" y="405.9326">用于存储锁对象目前的</text><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="85" x="721" y="405.9326">Mark Word</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="810" y="405.9326">的拷贝，</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="577" y="422.2295">然后拷贝对象头中的</text><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="85" x="707" y="422.2295">Mark Word</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="112" x="796" y="422.2295">复制到锁记录中。</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="144" x="577" y="438.5264">CAS 操作尝试将对象的</text><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="85" x="725" y="438.5264">Mark Word</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="0" x="814" y="438.5264"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="28" x="814" y="438.5264">更新</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="42" x="842" y="438.5264">为指向</text><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="98" x="888" y="438.5264">Lock Record</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="990" y="438.5264">的指针，</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="28" x="577" y="454.8232">并将</text><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="98" x="609" y="454.8232">Lock Record</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="28" x="711" y="454.8232">里的</text><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="51" x="743" y="454.8232">owner</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="798" y="454.8232">指针指向对象的</text><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="85" x="900" y="454.8232">Mark Word</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="14" x="985" y="454.8232">。</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="28" x="577" y="471.1201">更新</text><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="28" x="605" y="471.1201">成功</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="330" x="633" y="471.1201">： 线程就拥有了该对象的锁，锁标志位设置为“00”。</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="28" x="577" y="487.417">更新</text><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="28" x="605" y="487.417">失败</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="169" x="633" y="487.417">： 对象的 Mark Word 是否</text><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="126" x="802" y="487.417">指向当前线程的栈帧</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="14" x="928" y="487.417">？</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="196" x="577" y="503.7139">只有当前一个等待线程，自旋；</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="224" x="577" y="520.0107">自旋超过次数，或来第三个，膨胀。</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="0" x="581" y="536.3076"/><path d="M524,432.6797 L534,432.6797 C549,432.6797 549,441.8281 564,441.8281 L574,441.8281 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M398,349.1953 L408,349.1953 C423,349.1953 423,432.6797 438,432.6797 L448,432.6797 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="451" y="554.6045">重量级锁：管程</text><path d="M398,349.1953 L408,349.1953 C423,349.1953 423,549.7578 438,549.7578 L448,549.7578 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M286,603.5 L296,603.5 C311,603.5 311,349.1953 326,349.1953 L336,349.1953 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="0" x="343" y="572.9014"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="28" x="339" y="589.1982">乐观</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="429" x="367" y="589.1982">: 只是在更新数据的时候去判断之前有没有别的线程更新了这个数据，</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="322" x="339" y="605.4951">没有被更新，当前线程将自己修改的数据成功写入。</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="476" x="339" y="621.792">已经被其他线程更新，则根据不同的实现方式执行不同的操作（报错或重试）</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="0" x="343" y="638.0889"/><path d="M286,603.5 L296,603.5 C311,603.5 311,600.6484 326,600.6484 L336,600.6484 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="0" x="343" y="656.3857"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="28" x="339" y="672.6826">悲观</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="279" x="367" y="672.6826">: 使用数据的时候一定有别的线程来修改数据,</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="172" x="339" y="688.9795">在获取数据的时候会先加锁,</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="196" x="339" y="705.2764">确保数据不会被别的线程修改。</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="0" x="343" y="721.5732"/><path d="M286,603.5 L296,603.5 C311,603.5 311,684.1328 326,684.1328 L336,684.1328 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="48" x="336" y="744.3203"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="28" x="346" y="767.3154">CAS</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="437" y="739.8701">乐观锁中的重试</text><path d="M384,762.4688 L394,762.4688 C409,762.4688 409,735.0234 424,735.0234 L434,735.0234 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="60" x="437" y="758.167">ABA问题</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="190" x="497" y="758.167">: AtomicStampedReference</text><path d="M384,762.4688 L394,762.4688 C409,762.4688 409,753.3203 424,753.3203 L434,753.3203 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="210" x="437" y="776.4639">只能保证一个共享变量的原子操作</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="128" x="647" y="776.4639">: AtomicReference</text><path d="M384,762.4688 L394,762.4688 C409,762.4688 409,771.6172 424,771.6172 L434,771.6172 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="112" x="437" y="794.7607">循环时间长开销大</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="219" x="549" y="794.7607">: 只能保证一个共享变量的原子操作</text><path d="M384,762.4688 L394,762.4688 C409,762.4688 409,789.9141 424,789.9141 L434,789.9141 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M286,603.5 L296,603.5 C311,603.5 311,762.4688 326,762.4688 L336,762.4688 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="48" x="336" y="869.3984"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="28" x="346" y="892.3936">死锁</text><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="76" x="434" y="817.5078"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="444" y="840.5029">产生条件</text><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="56" x="563" y="813.0576">互斥条件</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="238" x="619" y="813.0576">：一个资源每次只能被一个进程使用。</text><path d="M510,835.6563 L520,835.6563 C535,835.6563 535,808.2109 550,808.2109 L560,808.2109 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="70" x="563" y="831.3545">占有且等待</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="378" x="633" y="831.3545">：一个进程因请求资源而阻塞时，对已获得的资源保持不放。</text><path d="M510,835.6563 L520,835.6563 C535,835.6563 535,826.5078 550,826.5078 L560,826.5078 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="84" x="563" y="849.6514">不可强行占有</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="345" x="647" y="849.6514">: 进程已获得的资源，在末使用完之前，不能强行剥夺。</text><path d="M510,835.6563 L520,835.6563 C535,835.6563 535,844.8047 550,844.8047 L560,844.8047 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="84" x="563" y="867.9482">循环等待条件</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="345" x="647" y="867.9482">: 若干进程之间形成一种头尾相接的循环等待资源关系。</text><path d="M510,835.6563 L520,835.6563 C535,835.6563 535,863.1016 550,863.1016 L560,863.1016 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M384,887.5469 L394,887.5469 C409,887.5469 409,835.6563 424,835.6563 L434,835.6563 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="48" x="434" y="905.9922"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="28" x="444" y="928.9873">排查</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="65" x="535" y="886.2451">jstat $PID</text><path d="M482,924.1406 L492,924.1406 C507,924.1406 507,881.3984 522,881.3984 L532,881.3984 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="157" x="535" y="904.542">jcmd $PID Thread.print</text><path d="M482,924.1406 L492,924.1406 C507,924.1406 507,899.6953 522,899.6953 L532,899.6953 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="0" x="539" y="922.8389"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="449" x="535" y="939.1357">ThreadMXBean bean = ManagementFactory.getThreadMXBean()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="343" x="535" y="955.4326">long[] threadIds = bean.findDeadlockedThreads()</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="0" x="539" y="971.7295"/><path d="M482,924.1406 L492,924.1406 C507,924.1406 507,942.4375 522,942.4375 L532,942.4375 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M384,887.5469 L394,887.5469 C409,887.5469 409,924.1406 424,924.1406 L434,924.1406 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M286,603.5 L296,603.5 C311,603.5 311,887.5469 326,887.5469 L336,887.5469 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="112" x="336" y="1003.625"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="92" x="346" y="1026.6201">reentrantlock</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="224" x="501" y="990.0264">实现原理，加锁和释放锁的一个过程</text><path d="M448,1021.7734 L458,1021.7734 C473,1021.7734 473,985.1797 488,985.1797 L498,985.1797 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="25" x="501" y="1008.3232">aqs</text><path d="M448,1021.7734 L458,1021.7734 C473,1021.7734 473,1003.4766 488,1003.4766 L498,1003.4766 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="501" y="1026.6201">公平和非公平</text><path d="M448,1021.7734 L458,1021.7734 C473,1021.7734 473,1021.7734 488,1021.7734 L498,1021.7734 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="42" x="501" y="1044.917">可重入</text><path d="M448,1021.7734 L458,1021.7734 C473,1021.7734 473,1040.0703 488,1040.0703 L498,1040.0703 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="42" x="501" y="1063.2139">可中断</text><path d="M448,1021.7734 L458,1021.7734 C473,1021.7734 473,1058.3672 488,1058.3672 L498,1058.3672 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M286,603.5 L296,603.5 C311,603.5 311,1021.7734 326,1021.7734 L336,1021.7734 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M202,923.7305 L212,923.7305 C227,923.7305 227,603.5 242,603.5 L252,603.5 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="90" x="252" y="1434.3398"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="262" y="1457.335">并发工具类</text><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="160" x="392" y="1179.5547"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="402" y="1202.5498">concurrenthashmap</text><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="146" x="602" y="1114.1094"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="126" x="612" y="1137.1045">怎么保证线程安全的</text><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="172" x="798" y="1077.5156"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="152" x="808" y="1100.5107">HashMap 为什么不安全</text><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="82" x="1023" y="1091.3623">多线程的put</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="1105" y="1091.3623">可能导致</text><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="70" x="1161" y="1091.3623">元素的丢失</text><path d="M970,1095.6641 L980,1095.6641 C995,1095.6641 995,1086.5156 1010,1086.5156 L1020,1086.5156 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="60" x="1023" y="1109.6592">put和get</text><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="28" x="1083" y="1109.6592">并发</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="1111" y="1109.6592">时，可能导致</text><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="68" x="1195" y="1109.6592">get为null</text><path d="M970,1095.6641 L980,1095.6641 C995,1095.6641 995,1104.8125 1010,1104.8125 L1020,1104.8125 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M748,1132.2578 L758,1132.2578 C773,1132.2578 773,1095.6641 788,1095.6641 L798,1095.6641 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="161" x="798" y="1142.2578"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="141" x="808" y="1165.2529">synchronized + CAS</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="1012" y="1137.8076">读安全：使用</text><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="56" x="1100" y="1137.8076">volatile</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="129" x="1160" y="1137.8076">保证当 Node 中的值</text><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="154" x="1289" y="1137.8076">变化时对于其他线程可见</text><path d="M959,1160.4063 L969,1160.4063 C984,1160.4063 984,1132.9609 999,1132.9609 L1009,1132.9609 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="1012" y="1156.1045">写安全：使用</text><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="128" x="1100" y="1156.1045">table 数组的头结点</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="143" x="1228" y="1156.1045">作为 synchronized 的</text><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="14" x="1371" y="1156.1045">锁</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="42" x="1385" y="1156.1045">来保证</text><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="84" x="1427" y="1156.1045">写操作的安全</text><path d="M959,1160.4063 L969,1160.4063 C984,1160.4063 984,1151.2578 999,1151.2578 L1009,1151.2578 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="214" x="1012" y="1174.4014">写安全：当头结点为 null 时，使用</text><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="32" x="1230" y="1174.4014">CAS</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="42" x="1266" y="1174.4014">操作来</text><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="140" x="1308" y="1174.4014">保证数据能正确的写入</text><path d="M959,1160.4063 L969,1160.4063 C984,1160.4063 984,1169.5547 999,1169.5547 L1009,1169.5547 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="429" x="1012" y="1192.6982">扩容安全：Synchronized 头节点，标记 moved，再插入的自旋等待</text><path d="M959,1160.4063 L969,1160.4063 C984,1160.4063 984,1187.8516 999,1187.8516 L1009,1187.8516 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M748,1132.2578 L758,1132.2578 C773,1132.2578 773,1160.4063 788,1160.4063 L798,1160.4063 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M552,1197.7031 L562,1197.7031 C577,1197.7031 577,1132.2578 592,1132.2578 L602,1132.2578 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="173" x="602" y="1207"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="153" x="612" y="1229.9951">为什么用 synchronized</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="362" x="828" y="1211.6982">头结点如果使用 ReentrantLock，需继承 AQS，增加内存</text><path d="M775,1225.1484 L785,1225.1484 C800,1225.1484 800,1206.8516 815,1206.8516 L825,1206.8516 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="828" y="1229.9951">降低了锁粒度</text><path d="M775,1225.1484 L785,1225.1484 C800,1225.1484 800,1225.1484 815,1225.1484 L825,1225.1484 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="167" x="828" y="1248.292">JVM 会优化 synchronized</text><path d="M775,1225.1484 L785,1225.1484 C800,1225.1484 800,1243.4453 815,1243.4453 L825,1243.4453 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M552,1197.7031 L562,1197.7031 C577,1197.7031 577,1225.1484 592,1225.1484 L602,1225.1484 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="112" x="605" y="1267.292">分段锁有什么问题</text><path d="M552,1197.7031 L562,1197.7031 C577,1197.7031 577,1262.4453 592,1262.4453 L602,1262.4453 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="302" x="602" y="1281.5938"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="282" x="612" y="1304.5889">hash算法 (h ^ (h &gt;&gt;&gt; 16)) &amp; HASH_BITS</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="957" y="1295.4404">高位参与</text><path d="M904,1299.7422 L914,1299.7422 C929,1299.7422 929,1290.5938 944,1290.5938 L954,1290.5938 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="189" x="957" y="1313.7373">HASH_BITS 0x7fffffff，变正数</text><path d="M904,1299.7422 L914,1299.7422 C929,1299.7422 929,1308.8906 944,1308.8906 L954,1308.8906 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M552,1197.7031 L562,1197.7031 C577,1197.7031 577,1299.7422 592,1299.7422 L602,1299.7422 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M342,1452.4883 L352,1452.4883 C367,1452.4883 367,1197.7031 382,1197.7031 L392,1197.7031 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="96" x="392" y="1431.5234"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="76" x="402" y="1454.5186">threadlocal</text><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="132" x="538" y="1337.8906"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="112" x="548" y="1360.8857">什么场景下使用的</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="33" x="723" y="1351.7373">MDC</text><path d="M670,1356.0391 L680,1356.0391 C695,1356.0391 695,1346.8906 710,1346.8906 L720,1346.8906 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="47" x="723" y="1370.0342">traceid</text><path d="M670,1356.0391 L680,1356.0391 C695,1356.0391 695,1365.1875 710,1365.1875 L720,1365.1875 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M488,1449.6719 L498,1449.6719 C513,1449.6719 513,1356.0391 528,1356.0391 L538,1356.0391 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="424" x="541" y="1398.1826">原理： 每个线程有一个自己的ThreadLocalMap&lt;ThreadLocal, V&gt;</text><path d="M488,1449.6719 L498,1449.6719 C513,1449.6719 513,1393.3359 528,1393.3359 L538,1393.3359 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="0" x="545" y="1416.4795"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="197" x="541" y="1432.7764">hash冲突怎么办: 开放地址法，</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="266" x="541" y="1449.0732">不为 null，且已经过期，则启动探测试清理</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="0" x="545" y="1465.3701"/><path d="M488,1449.6719 L498,1449.6719 C513,1449.6719 513,1436.0781 528,1436.0781 L538,1436.0781 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="0" x="545" y="1483.667"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="408" x="541" y="1499.9639">内存泄漏：key 是 WeakReference，不存在强引用时，自动回收</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="422" x="541" y="1516.2607">value 是强引用： Thread -&gt; ThreadLocalMap -&gt; Entry -&gt; value</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="251" x="541" y="1532.5576">只有 Thread 被回收，value 才被回收。</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="0" x="545" y="1548.8545"/><path d="M488,1449.6719 L498,1449.6719 C513,1449.6719 513,1511.4141 528,1511.4141 L538,1511.4141 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="168" x="541" y="1567.1514">解决方法：用完后 remove</text><path d="M488,1449.6719 L498,1449.6719 C513,1449.6719 513,1562.3047 528,1562.3047 L538,1562.3047 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M342,1452.4883 L352,1452.4883 C367,1452.4883 367,1449.6719 382,1449.6719 L392,1449.6719 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="62" x="392" y="1686.3086"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="42" x="402" y="1709.3037">线程池</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="507" y="1585.4482">扩容实现</text><path d="M454,1704.457 L464,1704.457 C479,1704.457 479,1580.6016 494,1580.6016 L504,1580.6016 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="442" x="507" y="1603.7451">线程回收： getTask() 返回 null，线程池只是维持引用，防止 JVM 回收</text><path d="M454,1704.457 L464,1704.457 C479,1704.457 479,1598.8984 494,1598.8984 L504,1598.8984 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="76" x="504" y="1677.1602"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="514" y="1700.1553">核心参数</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="90" x="633" y="1622.042">corePoolSize</text><path d="M580,1695.3086 L590,1695.3086 C605,1695.3086 605,1617.1953 620,1617.1953 L630,1617.1953 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="125" x="633" y="1640.3389">maximumPoolSize</text><path d="M580,1695.3086 L590,1695.3086 C605,1695.3086 605,1635.4922 620,1635.4922 L630,1635.4922 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="633" y="1658.6357">keepAliveTime</text><path d="M580,1695.3086 L590,1695.3086 C605,1695.3086 605,1653.7891 620,1653.7891 L630,1653.7891 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="61" x="633" y="1676.9326">TimeUnit</text><path d="M580,1695.3086 L590,1695.3086 C605,1695.3086 605,1672.0859 620,1672.0859 L630,1672.0859 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="195" x="633" y="1695.2295">workQueue: BlockingQueue</text><path d="M580,1695.3086 L590,1695.3086 C605,1695.3086 605,1690.3828 620,1690.3828 L630,1690.3828 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="95" x="633" y="1713.5264">threadFactory</text><path d="M580,1695.3086 L590,1695.3086 C605,1695.3086 605,1708.6797 620,1708.6797 L630,1708.6797 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="427" x="630" y="1727.8281"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="407" x="640" y="1750.8232">RejectedExecutionHandler：关闭了或者加不了线程处理了调用</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="310" x="1110" y="1723.3779">AbortPolicy： 抛 RejectedExecutionException</text><path d="M1057,1745.9766 L1067,1745.9766 C1082,1745.9766 1082,1718.5313 1097,1718.5313 L1107,1718.5313 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="113" x="1110" y="1741.6748">CallerRunsPolicy</text><path d="M1057,1745.9766 L1067,1745.9766 C1082,1745.9766 1082,1736.8281 1097,1736.8281 L1107,1736.8281 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="290" x="1110" y="1759.9717">DiscardOldestPolicy：最早的出队，执行这个</text><path d="M1057,1745.9766 L1067,1745.9766 C1082,1745.9766 1082,1755.125 1097,1755.125 L1107,1755.125 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="161" x="1110" y="1778.2686">DiscardPolicy：啥也不做</text><path d="M1057,1745.9766 L1067,1745.9766 C1082,1745.9766 1082,1773.4219 1097,1773.4219 L1107,1773.4219 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M580,1695.3086 L590,1695.3086 C605,1695.3086 605,1745.9766 620,1745.9766 L630,1745.9766 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M454,1704.457 L464,1704.457 C479,1704.457 479,1695.3086 494,1695.3086 L504,1695.3086 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="229" x="507" y="1796.5654">线程数设置： IO密集型和CPU密集型</text><path d="M454,1704.457 L464,1704.457 C479,1704.457 479,1791.7188 494,1791.7188 L504,1791.7188 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="507" y="1814.8623">参数动态调整后变化过程 *</text><path d="M454,1704.457 L464,1704.457 C479,1704.457 479,1810.0156 494,1810.0156 L504,1810.0156 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="123" x="507" y="1833.1592">线程抛异常怎么办 *</text><path d="M454,1704.457 L464,1704.457 C479,1704.457 479,1828.3125 494,1828.3125 L504,1828.3125 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M342,1452.4883 L352,1452.4883 C367,1452.4883 367,1704.457 382,1704.457 L392,1704.457 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M202,923.7305 L212,923.7305 C227,923.7305 227,1452.4883 242,1452.4883 L252,1452.4883 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M56,1446.6133 L66,1446.6133 C81,1446.6133 81,923.7305 96,923.7305 L106,923.7305 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="48" x="106" y="1939.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="28" x="116" y="1962.6436">线程</text><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="76" x="204" y="1939.6484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="214" y="1962.6436">线程状态</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="32" x="333" y="1851.4561">NEW</text><path d="M280,1957.7969 L290,1957.7969 C305,1957.7969 305,1846.6094 320,1846.6094 L330,1846.6094 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="333" y="1869.7529">RUNNABLE</text><path d="M280,1957.7969 L290,1957.7969 C305,1957.7969 305,1864.9063 320,1864.9063 L330,1864.9063 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="87" x="330" y="1884.0547"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="67" x="340" y="1907.0498">BLOCKED</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="188" x="470" y="1897.9014">等待 montor lock 进入同步区</text><path d="M417,1902.2031 L427,1902.2031 C442,1902.2031 442,1893.0547 457,1893.0547 L467,1893.0547 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="230" x="470" y="1916.1982">Object.wait() 后阻塞重新进入同步区</text><path d="M417,1902.2031 L427,1902.2031 C442,1902.2031 442,1911.3516 457,1911.3516 L467,1911.3516 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M280,1957.7969 L290,1957.7969 C305,1957.7969 305,1902.2031 320,1902.2031 L330,1902.2031 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="78" x="330" y="1940.3516"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="58" x="340" y="1963.3467">WAITING</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="118" x="461" y="1945.0498">无限 Object.wait()</text><path d="M408,1958.5 L418,1958.5 C433,1958.5 433,1940.2031 448,1940.2031 L458,1940.2031 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="119" x="461" y="1963.3467">无限 Thread.join()</text><path d="M408,1958.5 L418,1958.5 C433,1958.5 433,1958.5 448,1958.5 L458,1958.5 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="121" x="461" y="1981.6436">LockSupport.park</text><path d="M408,1958.5 L418,1958.5 C433,1958.5 433,1976.7969 448,1976.7969 L458,1976.7969 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M280,1957.7969 L290,1957.7969 C305,1957.7969 305,1958.5 320,1958.5 L330,1958.5 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="129" x="330" y="2013.5391"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="109" x="340" y="2036.5342">TIMED_WAITING</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="91" x="512" y="1999.9404">Thread.sleep</text><path d="M459,2031.6875 L469,2031.6875 C484,2031.6875 484,1995.0938 499,1995.0938 L509,1995.0938 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="118" x="512" y="2018.2373">有限 Object.wait()</text><path d="M459,2031.6875 L469,2031.6875 C484,2031.6875 484,2013.3906 499,2013.3906 L509,2013.3906 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="119" x="512" y="2036.5342">有限 Thread.join()</text><path d="M459,2031.6875 L469,2031.6875 C484,2031.6875 484,2031.6875 499,2031.6875 L509,2031.6875 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="165" x="512" y="2054.8311">LockSupport.parkNanos</text><path d="M459,2031.6875 L469,2031.6875 C484,2031.6875 484,2049.9844 499,2049.9844 L509,2049.9844 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="151" x="512" y="2073.1279">LockSupport.parkUntil</text><path d="M459,2031.6875 L469,2031.6875 C484,2031.6875 484,2068.2813 499,2068.2813 L509,2068.2813 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M280,1957.7969 L290,1957.7969 C305,1957.7969 305,2031.6875 320,2031.6875 L330,2031.6875 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="91" x="333" y="2073.8311">TERMINATED</text><path d="M280,1957.7969 L290,1957.7969 C305,1957.7969 305,2068.9844 320,2068.9844 L330,2068.9844 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M154,1957.7969 L164,1957.7969 C179,1957.7969 179,1957.7969 194,1957.7969 L204,1957.7969 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="69" x="207" y="1999.9404">interrupt()</text><path d="M154,1957.7969 L164,1957.7969 C179,1957.7969 179,1995.0938 194,1995.0938 L204,1995.0938 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M56,1446.6133 L66,1446.6133 C81,1446.6133 81,1957.7969 96,1957.7969 L106,1957.7969 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="48" x="106" y="2096.5781"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="28" x="116" y="2119.5732">集合</text><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="84" x="204" y="2096.5781"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="214" y="2119.5732">hashmap</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="102" x="341" y="2092.1279">原理, put &amp; get</text><path d="M288,2114.7266 L298,2114.7266 C313,2114.7266 313,2087.2813 328,2087.2813 L338,2087.2813 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="72" x="341" y="2110.4248">8转红黑树?</text><path d="M288,2114.7266 L298,2114.7266 C313,2114.7266 313,2105.5781 328,2105.5781 L338,2105.5781 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="140" x="341" y="2128.7217">什么时候扩容? 0.75？</text><path d="M288,2114.7266 L298,2114.7266 C313,2114.7266 313,2123.875 328,2123.875 L338,2123.875 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="168" x="341" y="2147.0186">扩容步骤，为什么分高低位</text><path d="M288,2114.7266 L298,2114.7266 C313,2114.7266 313,2142.1719 328,2142.1719 L338,2142.1719 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M154,2114.7266 L164,2114.7266 C179,2114.7266 179,2114.7266 194,2114.7266 L204,2114.7266 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M56,1446.6133 L66,1446.6133 C81,1446.6133 81,2114.7266 96,2114.7266 L106,2114.7266 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="48" x="106" y="2360.1406"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="28" x="116" y="2383.1357">代理</text><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="93" x="204" y="2242.1016"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="73" x="214" y="2265.0967">spring aop</text><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="48" x="347" y="2242.1016"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="28" x="357" y="2265.0967">理解</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="0" x="452" y="2165.3154"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="385" x="448" y="2181.6123">以不同于 OOP 的方式思考程序结构，模块化的关键是 Aspect</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="472" x="448" y="2197.9092">Aspect 能够实现跨越多种类型和对象的关注点（例如事务管理）的模块化。</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="0" x="452" y="2214.2061"/><path d="M395,2260.25 L405,2260.25 C420,2260.25 420,2184.9141 435,2184.9141 L445,2184.9141 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="0" x="452" y="2232.5029"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="448" y="2248.7998">解决什么问题:</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="213" x="448" y="2265.0967">1. 提供声明式企业服务（事务）；</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="411" x="448" y="2281.3936">2. 让用户实现自定义 Aspect，以 AOP 补充他们对 OOP 的使用。</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="0" x="452" y="2297.6904"/><path d="M395,2260.25 L405,2260.25 C420,2260.25 420,2260.25 435,2260.25 L445,2260.25 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="0" x="452" y="2315.9873"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="270" x="448" y="2332.2842">实现原理： 默认（实现了接口）动态代理，</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="292" x="448" y="2348.5811">配置了 Aspect，创建 Bean 时创建代理对象。</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="0" x="452" y="2364.8779"/><path d="M395,2260.25 L405,2260.25 C420,2260.25 420,2335.5859 435,2335.5859 L445,2335.5859 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M297,2260.25 L307,2260.25 C322,2260.25 322,2260.25 337,2260.25 L347,2260.25 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M154,2378.2891 L164,2378.2891 C179,2378.2891 179,2260.25 194,2260.25 L204,2260.25 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="155" x="204" y="2469.0703"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="135" x="214" y="2492.0654">JDK 动态代理 &amp; cglib</text><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="103" x="409" y="2379.1797"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="83" x="419" y="2402.1748">JDK 动态代理</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="309" x="565" y="2383.8779">InvocationHandler &amp; Proxy.newProxyInstance</text><path d="M512,2397.3281 L522,2397.3281 C537,2397.3281 537,2379.0313 552,2379.0313 L562,2379.0313 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="196" x="565" y="2402.1748">优点：原生，生成代理类速度快</text><path d="M512,2397.3281 L522,2397.3281 C537,2397.3281 537,2397.3281 552,2397.3281 L562,2397.3281 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="238" x="565" y="2420.4717">缺点：必须实现接口，反射回调速度慢</text><path d="M512,2397.3281 L522,2397.3281 C537,2397.3281 537,2415.625 552,2415.625 L562,2415.625 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M359,2487.2188 L369,2487.2188 C384,2487.2188 384,2397.3281 399,2397.3281 L409,2397.3281 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="61" x="409" y="2497.2188"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="41" x="419" y="2520.2139">CGLIB</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="0" x="527" y="2439.4717"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="394" x="523" y="2455.7686">ASM字节码生成框架，直接对需要代理的类的字节码进行操作，</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="364" x="523" y="2472.0654">生成这个类的一个子类，并重写了类的所有可以重写的方法</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="0" x="527" y="2488.3623"/><path d="M470,2515.3672 L480,2515.3672 C495,2515.3672 495,2459.0703 510,2459.0703 L520,2459.0703 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="48" x="520" y="2502.6641"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="28" x="530" y="2525.6592">优点</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="70" x="621" y="2507.3623">不需要接口</text><path d="M568,2520.8125 L578,2520.8125 C593,2520.8125 593,2502.5156 608,2502.5156 L618,2502.5156 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="210" x="621" y="2525.6592">原来类的子类可以对所有方法代理</text><path d="M568,2520.8125 L578,2520.8125 C593,2520.8125 593,2520.8125 608,2520.8125 L618,2520.8125 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="210" x="621" y="2543.9561">效率高，和编写的普通类没啥区别</text><path d="M568,2520.8125 L578,2520.8125 C593,2520.8125 593,2539.1094 608,2539.1094 L618,2539.1094 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M470,2515.3672 L480,2515.3672 C495,2515.3672 495,2520.8125 510,2520.8125 L520,2520.8125 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="48" x="520" y="2558.9609"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="28" x="530" y="2581.9561">缺点</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="137" x="621" y="2563.6592">需要继承，final 类 gg</text><path d="M568,2577.1094 L578,2577.1094 C593,2577.1094 593,2558.8125 608,2558.8125 L618,2558.8125 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="219" x="621" y="2581.9561">重写方法，final 或 private 方法 gg</text><path d="M568,2577.1094 L578,2577.1094 C593,2577.1094 593,2577.1094 608,2577.1094 L618,2577.1094 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="182" x="621" y="2600.2529">操作字节码，代理类生成较慢</text><path d="M568,2577.1094 L578,2577.1094 C593,2577.1094 593,2595.4063 608,2595.4063 L618,2595.4063 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M470,2515.3672 L480,2515.3672 C495,2515.3672 495,2577.1094 510,2577.1094 L520,2577.1094 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M359,2487.2188 L369,2487.2188 C384,2487.2188 384,2515.3672 399,2515.3672 L409,2515.3672 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M154,2378.2891 L164,2378.2891 C179,2378.2891 179,2487.2188 194,2487.2188 L204,2487.2188 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M56,1446.6133 L66,1446.6133 C81,1446.6133 81,2378.2891 96,2378.2891 L106,2378.2891 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="48" x="106" y="2596.2578"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="28" x="116" y="2619.2529">反射</text><a href="https://www.cnblogs.com/chanshuyi/p/head_first_of_reflection.html" target="_top" title="https://www.cnblogs.com/chanshuyi/p/head_first_of_reflection.html" xlink:actuate="onRequest" xlink:href="https://www.cnblogs.com/chanshuyi/p/head_first_of_reflection.html" xlink:show="new" xlink:title="https://www.cnblogs.com/chanshuyi/p/head_first_of_reflection.html" xlink:type="simple"><text fill="#0000FF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" text-decoration="underline" textLength="75" x="207" y="2619.2529">反射-陈树义</text></a><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="28" x="282" y="2619.2529">原理</text><path d="M154,2614.4063 L164,2614.4063 C179,2614.4063 179,2614.4063 194,2614.4063 L204,2614.4063 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M56,1446.6133 L66,1446.6133 C81,1446.6133 81,2614.4063 96,2614.4063 L106,2614.4063 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="44" x="106" y="2708.1484"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="24" x="116" y="2731.1436">NIO</text><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="48" x="200" y="2652.5547"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="28" x="210" y="2675.5498">组件</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="57" x="301" y="2657.2529">Channel</text><path d="M248,2670.7031 L258,2670.7031 C273,2670.7031 273,2652.4063 288,2652.4063 L298,2652.4063 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="41" x="301" y="2675.5498">Buffer</text><path d="M248,2670.7031 L258,2670.7031 C273,2670.7031 273,2670.7031 288,2670.7031 L298,2670.7031 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="57" x="301" y="2693.8467">Selector</text><path d="M248,2670.7031 L258,2670.7031 C273,2670.7031 273,2689 288,2689 L298,2689 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M150,2726.2969 L160,2726.2969 C175,2726.2969 175,2670.7031 190,2670.7031 L200,2670.7031 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="203" y="2712.8467">实现原理</text><path d="M150,2726.2969 L160,2726.2969 C175,2726.2969 175,2708 190,2708 L200,2708 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="42" x="203" y="2731.1436">优缺点</text><path d="M150,2726.2969 L160,2726.2969 C175,2726.2969 175,2726.2969 190,2726.2969 L200,2726.2969 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="217" x="203" y="2749.4404">netty的设计模型，架构，使用场景</text><path d="M150,2726.2969 L160,2726.2969 C175,2726.2969 175,2744.5938 190,2744.5938 L200,2744.5938 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="53" x="200" y="2763.7422"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="33" x="210" y="2786.7373">epoll</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="502" x="306" y="2777.5889">LT(水平触发)：读缓冲区不空，一直触发读事件；写缓冲区不满，一直触发写事件</text><path d="M253,2781.8906 L263,2781.8906 C278,2781.8906 278,2772.7422 293,2772.7422 L303,2772.7422 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="394" x="306" y="2795.8857">ET(边缘触发)：读：空 -&gt; 非空 只一次；写：满 -&gt; 不满 只一次</text><path d="M253,2781.8906 L263,2781.8906 C278,2781.8906 278,2791.0391 293,2791.0391 L303,2791.0391 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M150,2726.2969 L160,2726.2969 C175,2726.2969 175,2781.8906 190,2781.8906 L200,2781.8906 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M56,1446.6133 L66,1446.6133 C81,1446.6133 81,2726.2969 96,2726.2969 L106,2726.2969 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><rect fill="#FEFECE" filter="url(#f14u7xvm8byepy)" height="36.2969" rx="12.5" ry="12.5" style="stroke:#A80036;stroke-width:1.5;" width="76" x="106" y="2828.4844"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="116" y="2851.4795">引用类型</text><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="42" x="235" y="2824.0342">强引用</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="60" x="277" y="2824.0342">： 强引用</text><path d="M182,2846.6328 L192,2846.6328 C207,2846.6328 207,2819.1875 222,2819.1875 L232,2819.1875 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="42" x="235" y="2842.3311">软引用</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="327" x="277" y="2842.3311">：SoftReference 修饰，在内存要溢出的时候被回收</text><path d="M182,2846.6328 L192,2846.6328 C207,2846.6328 207,2837.4844 222,2837.4844 L232,2837.4844 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="42" x="235" y="2860.6279">弱引用</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="275" x="277" y="2860.6279">：WeakReference，发生 GC，就会被回收</text><path d="M182,2846.6328 L192,2846.6328 C207,2846.6328 207,2855.7813 222,2855.7813 L232,2855.7813 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="42" x="235" y="2878.9248">虚引用</text><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="260" x="277" y="2878.9248">：PhantomReference，熄火时接到通知</text><path d="M182,2846.6328 L192,2846.6328 C207,2846.6328 207,2874.0781 222,2874.0781 L232,2874.0781 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><path d="M56,1446.6133 L66,1446.6133 C81,1446.6133 81,2846.6328 96,2846.6328 L106,2846.6328 " fill="none" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[74582896308e4dd6f87dff27a70474f8]
@startmindmap
* Java

** 并发 & 同步

*** [[https://tech.meituan.com/2018/11/15/java-lock.html 锁事-美团]] synchronized 
****_ [[https://xiaomi-info.github.io/2020/03/24/synchronized/ 原理-小米]]，可重入性，可见性
****_ 锁升级

*** volatile
****_ 64 位写入的原子性，按照 slot 写入。64 位要写两次
****_ 可见性
****_ 内存屏障
****_ 内存屏障，保证指令不重排

*** 锁
**** 锁升级
***** 偏向锁
******_ 一直被一个线程所访问
******_ 在 **Mark Word** 里存储锁偏向的线程 **ID**
******_: 
**撤销**：
只有遇到其他线程尝试竞争偏向锁时，
持有偏向锁的线程才会释放锁，
**不会主动释**放偏向锁。
**等待全局安全点**，暂停拥有偏向锁的线程，
判断锁对象是否处于被锁定状态。
恢复无锁（标志位为 01）或轻量级锁（标志位为 00）的状态
;
***** 轻量级锁
******_ 线程会通过自旋的形式尝试获取锁，不会阻塞，从而提高性能。
******_: 
无锁状态: 
在**当前线程的栈帧**中建立一个名为**锁记录**（Lock Record）的空间，
用于存储锁对象目前的 **Mark Word** 的拷贝，
然后拷贝对象头中的 **Mark Word** 复制到锁记录中。
CAS 操作尝试将对象的 **Mark Word** **更新**为指向 **Lock Record** 的指针，
并将 **Lock Record** 里的 **owner** 指针指向对象的 **Mark Word**。
更新**成功**： 线程就拥有了该对象的锁，锁标志位设置为“00”。
更新**失败**： 对象的 Mark Word 是否**指向当前线程的栈帧**？
只有当前一个等待线程，自旋；
自旋超过次数，或来第三个，膨胀。
;
*****_ 重量级锁：管程

****_: 
**乐观**: 只是在更新数据的时候去判断之前有没有别的线程更新了这个数据，
没有被更新，当前线程将自己修改的数据成功写入。
已经被其他线程更新，则根据不同的实现方式执行不同的操作（报错或重试）
;
****_: 
**悲观**: 使用数据的时候一定有别的线程来修改数据,
在获取数据的时候会先加锁,
确保数据不会被别的线程修改。
;
**** CAS
*****_ 乐观锁中的重试
*****_ **ABA问题**: AtomicStampedReference
*****_ **只能保证一个共享变量的原子操作**: AtomicReference
*****_ **循环时间长开销大**: 只能保证一个共享变量的原子操作
**** 死锁
***** 产生条件
******_  **互斥条件**：一个资源每次只能被一个进程使用。
******_ **占有且等待**：一个进程因请求资源而阻塞时，对已获得的资源保持不放。
******_ **不可强行占有**: 进程已获得的资源，在末使用完之前，不能强行剥夺。
******_ **循环等待条件**: 若干进程之间形成一种头尾相接的循环等待资源关系。
***** 排查
******_ jstat $PID
******_ jcmd $PID Thread.print
******_:
ThreadMXBean bean = ManagementFactory.getThreadMXBean()
long[] threadIds = bean.findDeadlockedThreads()
;
**** reentrantlock
*****_ 实现原理，加锁和释放锁的一个过程
*****_ aqs
*****_ 公平和非公平
*****_ 可重入
*****_ 可中断


*** 并发工具类
**** concurrenthashmap
***** 怎么保证线程安全的
****** HashMap 为什么不安全
*******_ **多线程的put**可能导致**元素的丢失**
*******_ put和get**并发**时，可能导致**get为null**
****** synchronized + CAS
*******_ 读安全：使用 **volatile** 保证当 Node 中的值**变化时对于其他线程可见**
*******_ 写安全：使用 **table 数组的头结点**作为 synchronized 的**锁**来保证**写操作的安全**
*******_ 写安全：当头结点为 null 时，使用 **CAS** 操作来**保证数据能正确的写入**
*******_ 扩容安全：Synchronized 头节点，标记 moved，再插入的自旋等待
***** 为什么用 synchronized
******_ 头结点如果使用 ReentrantLock，需继承 AQS，增加内存
******_ 降低了锁粒度
******_ JVM 会优化 synchronized
*****_ 分段锁有什么问题
***** hash算法 (h ^ (h >>> 16)) & HASH_BITS
******_ 高位参与
******_ HASH_BITS 0x7fffffff，变正数

**** threadlocal
***** 什么场景下使用的
******_ MDC
******_ traceid
*****_ 原理： 每个线程有一个自己的ThreadLocalMap<ThreadLocal, V>
*****_: 
hash冲突怎么办: 开放地址法，
不为 null，且已经过期，则启动探测试清理
;
*****_: 
内存泄漏：key 是 WeakReference，不存在强引用时，自动回收
value 是强引用： Thread -> ThreadLocalMap -> Entry -> value
只有 Thread 被回收，value 才被回收。
;
*****_ 解决方法：用完后 remove
**** 线程池
*****_ 扩容实现
*****_ 线程回收： getTask() 返回 null，线程池只是维持引用，防止 JVM 回收

***** 核心参数
******_ corePoolSize
******_ maximumPoolSize
******_ keepAliveTime
******_ TimeUnit
******_ workQueue: BlockingQueue
******_ threadFactory
****** RejectedExecutionHandler：关闭了或者加不了线程处理了调用
*******_ AbortPolicy： 抛 RejectedExecutionException
*******_ CallerRunsPolicy
*******_ DiscardOldestPolicy：最早的出队，执行这个
*******_ DiscardPolicy：啥也不做
*****_ 线程数设置： IO密集型和CPU密集型
*****_ 参数动态调整后变化过程 *
*****_ 线程抛异常怎么办 *

** 线程
*** 线程状态
****_ NEW
****_ RUNNABLE
**** BLOCKED
*****_ 等待 montor lock 进入同步区
*****_ Object.wait() 后阻塞重新进入同步区
**** WAITING
*****_ 无限 Object.wait()
*****_ 无限 Thread.join()
*****_ LockSupport.park
**** TIMED_WAITING
*****_ Thread.sleep
*****_ 有限 Object.wait()
*****_ 有限 Thread.join()
*****_ LockSupport.parkNanos
*****_ LockSupport.parkUntil
****_ TERMINATED

***_ interrupt()

** 集合

*** hashmap
****_ 原理, put & get
****_ 8转红黑树?
****_ 什么时候扩容? 0.75？
****_ 扩容步骤，为什么分高低位
** 代理
*** spring aop
**** 理解
*****_: 
以不同于 OOP 的方式思考程序结构，模块化的关键是 Aspect
Aspect 能够实现跨越多种类型和对象的关注点（例如事务管理）的模块化。
;
*****_: 
解决什么问题:
1. 提供声明式企业服务（事务）；
2. 让用户实现自定义 Aspect，以 AOP 补充他们对 OOP 的使用。
;
*****_: 
实现原理： 默认（实现了接口）动态代理，
配置了 Aspect，创建 Bean 时创建代理对象。
;
*** JDK 动态代理 & cglib
**** JDK 动态代理
*****_ InvocationHandler & Proxy.newProxyInstance
*****_ 优点：原生，生成代理类速度快
*****_ 缺点：必须实现接口，反射回调速度慢
**** CGLIB
*****_: 
ASM字节码生成框架，直接对需要代理的类的字节码进行操作，
生成这个类的一个子类，并重写了类的所有可以重写的方法
;
***** 优点
******_ 不需要接口
******_  原来类的子类可以对所有方法代理
******_  效率高，和编写的普通类没啥区别
***** 缺点
******_ 需要继承，final 类 gg
******_  重写方法，final 或 private 方法 gg
******_  操作字节码，代理类生成较慢

** 反射
***_ [[https://www.cnblogs.com/chanshuyi/p/head_first_of_reflection.html 反射-陈树义]]原理

** NIO
*** 组件
****_ Channel
****_ Buffer
****_ Selector
***_ 实现原理
***_ 优缺点
***_ netty的设计模型，架构，使用场景
*** epoll
****_ LT(水平触发)：读缓冲区不空，一直触发读事件；写缓冲区不满，一直触发写事件
****_ ET(边缘触发)：读：空 -> 非空 只一次；写：满 -> 不满 只一次

** 引用类型
***_ **强引用**： 强引用
***_ **软引用**：SoftReference 修饰，在内存要溢出的时候被回收
***_ **弱引用**：WeakReference，发生 GC，就会被回收
***_ **虚引用**：PhantomReference，熄火时接到通知

@endmindmap

PlantUML version 1.2021.5(Sun Apr 25 11:20:28 UTC 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>